1- create-react-app crwm-clothing
2- add SASS => yarn add node-sass
3-create a style SCSS => style.scss


// to remove file throught terminal
1- rm -rf yarn.lock(file name)

// if there were a version error 
1- in package.json use this 
"resolution":{
"babel-jest":"24.7.1"
}

// firebase rules
1-get user data from firebase called async action because we are making an API request
2- query is a request we make to firebase to give us something from data
3-firestore return two object refrence and snapshop
4- refrence like => doc or collections
5- we can use with doc => .get() , .update(), .set(), .delete() 

// MVC => modal view controling

// start to use redux
1- install redux => yarn add redux redux-logger react-redux


// utility function allow us to keep our files clean and organize functions that we may need in multiple files in one location

//reselect library it use so that my component don't rerender if my mapstatetoprops doesn't chage
=>  yarn add reselect

// six condition will get a false if i used them in a function => 0 , false , undefined, null, NaN, ""


//create a local storage using redux persist
1- install library => yarn add redux persist

//strip library for payment
1- create a new account 
2- install => yarn add react-stripe-checkout

// use styled-components library 
1-yarn add styled-components
2-import styled from 'styled-components'

// working with node to create a server
1- seperate our backend folder from frontend folder
2-create a client folder => mkdir client (on terminal) to remove folder rmdir client
3- move all your folder to it => move ./* ./client
4- creat new package.json file => type nul > package.json and to delet file => del package.json

// if i clon repository and want to push it to one of my heroku exsiting project 
1- heroku apps => to see all the apps i have on heroku
2- heroku git:remote -a (project name) => this will link between your project and heroku file you want to push your app to 
3- delet our buildpack name => heroku buildpacks:remove (buildpack name)
4-git push heroku master --force
5- let heroku know my .env key => heroku config:set STRIPE_SECRET_KEY= (my key value )
6- heroku open => to open my project

// write a gzip => this will decrease our js file size when it go to customer browser in heroku 

1- yarn add compression => this library allow us to compress and gzip all of the files and chunk that we end up sending out from our server heroku






















